[buildout]
extensions = buildout-versions

extends =
    http://downloads.plone.org.br/release/1.0.3/versions.cfg
    buildout.d/settings.cfg

blobs-dir=${:directory}/var
backups-dir=${:directory}/var

download-cache          = ./cache-buildout/downloads
eggs-directory          = ./cache-buildout/eggs
extends-cache           = ./cache-buildout/extends
develop-eggs-directory  = ./cache-buildout/develop-eggs
fake-eggs-directory     = ./cache-buildout/fake-eggs
fake-eggs               = ./cache-buildout/fake-eggs
zope-directory          = ./cache-buildout
zeo-address = ${hosts:zeoserver}:${ports:zeoserver}


parts =
    instance
    instance1
    instance2
    instance3
    cmds
    supervisor
    mkdir-chameleon
    zopepy

[hosts]
instance 	= 10.100.0.70
haproxy 	= 10.100.0.70
supervisor 	= 10.100.0.70
zeoserver 	= 10.100.0.151

[ports]
haproxy     = 8070
supervisor  = 8071
zeoserver   = 8022
zeomonitor  = 8023
instance1   = 8074
instance2   = 8075
instance3   = 8076
instance    = 8077

[users]
os         = plone
supervisor = admin
zmi        = admin
 
[password]
supervisor = supervisor
zmi        = 123456

[instance]
recipe = plone.recipe.zope2instance
user = ${users:zmi}:${password:zmi}
effective-user = ${users:os}
http-address = ${ports:instance}
verbose-security = off
debug-mode = off
event-log-level = info
locales = ${buildout:directory}/locales
environment-vars =
    CHAMELEON_CACHE ${buildout:directory}/var/chameleon-cache
    CHAMELEON_DEBUG false
    CHAMELEON_RELOAD true
    CHAMELEON_EAGER true
    PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs
    PTS_LANGUAGES en, es, pt-br
    zope_i18n_allowed_languages en, es, pt_BR
    zope_i18n_compile_mo_files false
    TEMP ${buildout:directory}/var/tmp
    TMP ${buildout:directory}/var/tmp
eggs =
    ${buildout:eggs}
zcml =
    ${buildout:zcml}

#configuracoes para usar o zeo
zeo-client = on
zeo-address = ${buildout:zeo-address}

# a configuracao abaixo deve ser on somente se a pasta com os blobs
# estiver compartilhada via rede (ex: nfs). Caso contrario, devera ser off
# e os arquivos serao enviados na mesma conexao do zeo.
shared-blob = on
# mesmo que a opcao acima seja off, devemos informar o caminho do blob-storage
# apesar de ser ignorado
blob-storage = ${buildout:blobs-dir}/var/blobstorage

zope-conf-additional =
python-check-interval = 2075
    <zodb_db ditec_coced_idg_BD>
        mount-point /ditec_coced_idg
        <zeoclient>
          name ditec_coced_idg
          storage ditec_coced_idg_bd
          cache-size 30MB
          server ${buildout:zeo-address}
          shared-blob-dir on
          blob-dir ${buildout:blobs-dir}/blobstorage_ditec_coced_idg
          var ${buildout:directory}/var
        </zeoclient>
    </zodb_db>

[cmds]
recipe = plone.recipe.command
command =
    sed -i '/port-base/d' production.cfg
    sed -i '/127.0.0.1:/d; /instance/d; /${hosts:instance}:/d' ${buildout:directory}/etc/templates/haproxy.conf.in
    echo "  server instance${ports:instance1} ${hosts:instance}:${ports:instance1} cookie p${ports:instance1} check maxconn 2 rise 1" >> etc/templates/haproxy.conf.in
    echo "  server instance${ports:instance2} ${hosts:instance}:${ports:instance2} cookie p${ports:instance2} check maxconn 2 rise 1" >> etc/templates/haproxy.conf.in
    echo "  server instance${ports:instance3} ${hosts:instance}:${ports:instance3} cookie p${ports:instance3} check maxconn 2 rise 1" >> etc/templates/haproxy.conf.in
    chown -R ${users:os} ${buildout:directory}
#
    mkdir -pv ${buildout:backups-dir}
    chown -R ${users:os} ${buildout:backups-dir}
#
    mkdir -pv ${buildout:blobs-dir}/blobstorage_ditec_coced_idg
    chown -R ${users:os} ${buildout:blobs-dir}/blobstorage_ditec_coced_idg
#
update-command = ${cmds:command}


[instance1]
<=instance
http-address = ${hosts:instance}:${ports:instance1}
icp-address = ${hosts:instance}:${ports:instance1}

[instance2]
<=instance
http-address = ${hosts:instance}:${ports:instance2}
icp-address = ${hosts:instance}:${ports:instance2}

[instance3]
<=instance
http-address = ${hosts:instance}:${ports:instance3}
icp-address = ${hosts:instance}:${ports:instance3}

[mkdir-chameleon]
recipe = plone.recipe.command
command =
    mkdir -p ${buildout:directory}/var/chameleon-cache
    rm -Rf ${buildout:directory}/var/chameleon-cache/*
update-command = ${:command}

[supervisor]
recipe = collective.recipe.supervisor
plugins =
    supervisor>2.1
    superlance
port = ${ports:supervisor}
user = ${users:supervisor}
password = ${password:supervisor}
serverurl = http://${hosts:supervisor}:${ports:supervisor}
programs =
    10 instance1  (autostart=true  startsecs=20)  ${buildout:directory}/bin/instance1 [console]  true  ${users:os}
    10 instance2  (autostart=true  startsecs=20)  ${buildout:directory}/bin/instance2 [console]  true  ${users:os}
    10 instance3  (autostart=true  startsecs=20)  ${buildout:directory}/bin/instance3 [console]  true  ${users:os}

logfile = ${buildout:directory}/var/log/supervisord.log
logfile_maxbytes = 5MB
logfile_backups = 10
loglevel = info
pidfile = ${buildout:directory}/var/supervisord.pid
nodaemon = false

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

